{{>main/layout/library}}
<link rel="stylesheet" href="/css/map.css" type="text/css">
<link rel="stylesheet" href="/css/main.css" type="text/css">
<style>
    #loading_modal {
        display: none;
        width: 750px;
        height: 800px;
        padding: 20px 60px;
        background-color: #fefefe;
        border: 1px solid #888;
        border-radius: 3px;
    }
    
    #modal_land {
        display: none;
        padding: 20px 60px;
        background-color: #fefefe;
        border: 1px solid #888;
        border-radius: 3px;
        opacity: 0.8;
    }
    
    #modal_multi {
        display: none;
        padding: 20px 60px;
        background-color: #fefefe;
        border: 1px solid #888;
        border-radius: 3px;
        opacity: 0.8;
    }

    .modal_close_btn {
        position: absolute;
        top: 10px;
        right: 10px;
    }
</style>
<header>
  <div class="logo"><img src="/img/logo.png"></div>
  <div class="search-container">
      <input class="search" type="text" placeholder="주소 입력" id="search" name="search" >
  </div>
    <a onClick="searchAddr();" href="#"><img class="search-icon" src="/img/icon.png"></a>
</header>

<script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=ede3a90a2627907627478d4036d6ca65&libraries=services"></script>
<script src="/js/map.js"></script>

<script>
$(".btn").click(function() {
  $("#menu,.page_cover,html").addClass("open");
  window.location.hash = "#open";
});

window.onhashchange = function() {
  if (location.hash != "#open") {
    $("#menu,.page_cover,html").removeClass("open");
  }
};
</script>

<div class="btn">
</div>
<div onclick="history.back();" class="page_cover"></div>
<div id="menu">
  <div onclick="history.back();" class="close"></div>
</div>

<div id="map" style="width:100%;height:85%;"></div>
<div class="hAddr">
    <span class="title">지도중심기준 행정동 주소정보</span>
    <span id="centerAddr"></span>
</div>

<!-- <button id="popup_open_btn">팝업창 띄어 줘염</button> -->

<input type="hidden" type="text" id="tempAddr">

<!-- loading -->
<div class="loading1" id="loading_modal" style="display:none">
	<div class="loading2">
	<h1>Loading</h1>
	<!-- 3  -->
		<div class="loader loader--style3" title="2">
		  <svg version="1.1" id="loader-1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
		     width="90px" height="90px" viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve">
		  <path fill="#000" d="M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z">
		    <animateTransform attributeType="xml"
		      attributeName="transform"
		      type="rotate"
		      from="0 25 25"
		      to="360 25 25"
		      dur="0.6s"
		      repeatCount="indefinite"/>
		    </path>
		  </svg>
		</div>
	</div>
	<a class="modal_close_btn" style="display:none;">닫기</a>
</div> <!----- loading end ----->


<!-- table 토지-->
<div class="table-group" id="modal_land" style="display:none; overflow-y: scroll; height:800px;">
	<!-- <tr class="table-close">
        <button class="table-close"><img src="/img/close.png"></button>
    </tr> -->
    투명도 조절 : <input type="range" id="html_land">
    <table class="table-title">
	  <tbody>
		<tr>
		  <td class="background-s">추정시세</td>
          <td id="land_price">126,000,000 원</td>
		</tr>
	  </tbody>
	</table>
    
	<table>
	  <tbody>
		<tr>
		  <td class="background-s">토지가격</td>
		  <td id="land_l_price">33,853,600,000 원</td>
		  <td class="background-s">건물가격</td>
          <td id="land_s_price">1,763,100,000 원</td>
		</tr>
		<tr>
		  <td class="background-s">토지단가</td>
		  <td id="land_ll_price">74,191,000 원<br>개별공시지가대비 257%</td>
		  <td class="background-s">건물단가</td>
          <td id="land_ss_price">655,000 원</td>
		</tr>
		<tr>
		  <td class="background-s">토지면적</td>
		  <td id="land_l_area">456.30 ㎡</td>
		  <td class="background-s">건물연면적</td>
          <td id="land_s_area">2,6990.22 ㎡</td>
		</tr>
        <tr>
		  <td class="background-s">용도지역</td>
		  <td id="land_purps">일반상업지역</td>
		  <td class="background-s">주용도</td>
          <td id="land_main_purps">제2종근생활시설</td>
		</tr>
        <tr>
		  <td class="background-s">2021년 공시지가</td>
		  <td>-</td>
		  <td class="background-s">사용승인일</td>
          <td id="land_ss_day">2003-06-20</td>
		</tr>
	  </tbody>
	</table>

    <h3>유사매매사례</h3>
	<table class="table">
	  <thead>
		<tr>
		    <th>No</th>
            <th>유사정도</th>
            <th>소재지</th>
            <th>건물명</th>
            <th>층명</th>
            <th>전용면적</th>
            <th>승강기</th>
            <th>사용승인</th>
            <th>계약일자</th>
            <th>거래금액</th>
		</tr>
	  </thead>
	  <tbody id="land_body">
	  </tbody>
	</table>
	<a class="modal_close_btn">닫기</a>
</div> <!----- table-group end ----->


<!-- table 집합-->
<div class="table-group" id="modal_multi" style="display:none; overflow-y: scroll; height:800px;">
<!--<div class="table-group">-->
	<!-- <tr class="table-close">
        <button class="table-close"><img src="/img/close.png"></button>
    </tr> -->
    투명도 조절 : <input type="range" id="html_multi">
    <table class="table-title">
	  <tbody>
		<tr>
		  <td class="background-s">추정시세</td>
          <td id="multi_price">126,000,000 원</td>
		</tr>
	  </tbody>
	</table>

	<table class="table">
	  <tbody>
		<tr>
		  <td class="background-s">동/호수</td>
		  <td colspan="3">
				<select id="multi_dong">
				</select>
				
				<select id="multi_ho">
				</select>
				
				<button onClick="closeModal('modal_multi'); searchAddr($('#multi_dong').val(), $('#multi_ho').val())" class="table-close">검색</button>
		  </td>
		</tr>
		<tr>
		  <td class="background-s">㎡ 단가</td>
		  <td id="multi_s_price">9,052,000 원</td>
		  <td class="background-s">3.3㎡ 단가</td>
          <td id="multi_ss_price">29,927,000 원</td>
		</tr>
		<tr>
		  <td class="background-s">전용면적</td>
		  <td id="multi_area">114.27 ㎡ / 34.57 (3.3㎡)</td>
		  <td class="background-s">공급면적</td>
          <td id="multi_s_area">144.28 ㎡ / 43.65(3.2㎡)</td>
		</tr>
		<tr>
		  <td class="background-s">기준시점</td>
		  <td id="multi_s_day">2021-09-24</td>
		  <td class="background-s">사용승인일</td>
          <td id="multi_ss_day">2008-04-30</td>
		</tr>
        <tr>
		  <td class="background-s">해당층 / 최고층</td>
		  <td id="multi_flr">7층 / 24</td>
		  <td class="background-s">세대수</td>
          <td id="multi_ctn">718 세대</td>
		</tr>
        <tr>
		  <td class="background-s">동 용도</td>
		  <td id="multi_dong_purps">공동주택</td>
		  <td class="background-s">호 용도</td>
          <td id="multi_ho_purps">아파트</td>
		</tr>
        <tr>
		  <td class="background-s">구조</td>
		  <td id="multi_strct">철근콘크리트 구조</td>
		</tr>
	  </tbody>
	</table>

    <h3>유사매매사례</h3>
	<table class="table">
	  <thead>
		<tr>
		    <th>No</th>
            <th>유사정도</th>
            <th>소재지</th>
            <th>건물명</th>
            <th>층명</th>
            <th>전용면적</th>
            <th>승강기</th>
            <th>사용승인</th>
            <th>계약일자</th>
            <th>거래금액</th>
		</tr>
	  </thead>
	  <tbody id="multi_body">
	  </tbody>
	</table>
	<a class="modal_close_btn">닫기</a>
</div> <!----- table-group end ----->



<script>
$(document).ready(function() {
	$("#search").keypress(function (e) {
		if (e.which == 13){
        	searchAddr();
		}
	});
	
	$(function () { 
		$('#modal_land').draggable({
			 handle: ".modal-header" 
		}); 
	});
	
	$(function () { 
		$('#modal_multi').draggable({
			 handle: ".modal-header" 
		}); 
	});
	
	/*
	emptyObject(jdata);
	
	if(jdata.name.length == 0){
		$("#multi_dong").append("<option value=''>선택</option>");
	} else {
		for(var i=0; i<jdata.name.length; i++){
			$("#multi_dong").append("<option value='" + jdata.name[i] + "'>" + jdata.name[i] + "</option>");
		}
	}
	*/
	
	$("#multi_dong").change(function(){
		$("#multi_ho").empty();
		var dong = this.value;
		
		for (const [key, value] of Object.entries(jdata)) {
			if(key == dong) {
				for(var i=0; i<value.length; i++){
					$("#multi_ho").append("<option value='" + value[i] + "'>" + value[i] + "</option>");
				}
			}
		}
	});
	
	$('#html_multi').on('input',function(e){ // 마우스 이동시에도 호출됨
		var val = $(this).val();
		val = val/100;
		if(val < 0.2){
			val = 0.2;
		}
		
		$("#modal_multi").css("opacity", val);
	});
	
	$('#html_land').on('input',function(e){ // 마우스 이동시에도 호출됨
		var val = $(this).val();
		val = val/100;
		if(val < 0.2){
			val = 0.2;
		}
		
		$("#modal_land").css("opacity", val);
	});
});

var container = document.getElementById('map'); //지도를 담을 영역의 DOM 레퍼런스
var options = { //지도를 생성할 때 필요한 기본 옵션
	center: new kakao.maps.LatLng(33.450701, 126.570667), //지도의 중심좌표.
	level: 3 //지도의 레벨(확대, 축소 정도)
};

var map = new kakao.maps.Map(container, options); //지도 생성 및 객체 리턴


// 주소-좌표 변환 객체를 생성합니다
var geocoder = new kakao.maps.services.Geocoder();

var marker = new kakao.maps.Marker(), // 클릭한 위치를 표시할 마커입니다
    infowindow = new kakao.maps.InfoWindow({zindex:1}); // 클릭한 위치에 대한 주소를 표시할 인포윈도우입니다

// 현재 지도 중심좌표로 주소를 검색해서 지도 좌측 상단에 표시합니다
searchAddrFromCoords(map.getCenter(), displayCenterInfo);

// 지도를 클릭했을 때 클릭 위치 좌표에 대한 주소정보를 표시하도록 이벤트를 등록합니다
kakao.maps.event.addListener(map, 'click', function(mouseEvent) {
	deleteMark();
    searchDetailAddrFromCoords(mouseEvent.latLng, function(result, status) {
    
    	modal('loading_modal');
    	
        if (status === kakao.maps.services.Status.OK) {
            var detailAddr = !!result[0].road_address ? '<div>도로명주소 : ' + result[0].road_address.address_name + '</div>' : '';
            detailAddr += '<div>지번 주소 : ' + result[0].address.address_name + '</div>';
            
            var content = '<div class="bAddr">' +
                            '<span class="title">법정동 주소정보</span>' + 
                            detailAddr + 
                        '</div>';

            // 마커를 클릭한 위치에 표시합니다 
            marker.setPosition(mouseEvent.latLng);
            marker.setMap(map);

            // 인포윈도우에 클릭한 위치에 대한 법정동 상세 주소정보를 표시합니다
            infowindow.setContent(content);
            infowindow.open(map, marker);
			
			const addrList200 = getAddrList200(mouseEvent.latLng);
			//const addrList500 = getAddrList500(mouseEvent.latLng);
			
			var dong = "";
			var ho = "";
			$("#search").val(result[0].address.address_name);
			          
			setTimeout(function() { 
				$.ajax({
							type: 'POST',
							url: '/map/search',
							traditional : true,
							data: {"addr": result[0].address.address_name, "addrList200" : addrList200,
							 "dong" : dong, "ho" : ho
							 },
							dataType: 'JSON',
							success: function(data)
							{
								closeModal('loading_modal');
					
								if(data.result == 1){
									if(data.landKind == "2" || data.landKind == "4" || data.landKind == "3" || data.landKind == "5"){
										if(dong == "" && ho == ""){
											$("#multi_price").text("동, 호수를 선택 후 검색해주세요");
											$("#multi_s_price").text("-");
											$("#multi_ss_price").text("-");
											$("#multi_area").text("-");
											$("#multi_s_area").text("-");
											$("#multi_s_day").text("-");
											$("#multi_ss_day").text("-");
											$("#multi_flr").text("-");
											$("#multi_ctn").text("-");
											$("#multi_dong_purps").text("-");
											$("#multi_ho_purps").text("-");
											$("#multi_strct").text("-");
											
											
											// 바디구현
											var tbody = "";
											
											
											//map.js에 있는 const에 객체 담기------------------------------------------------------------------
											emptyObject(jdata);
											
											var tempName = new Array();
											var name = new Array();
											
											for(var i=0; i<data.addrMap.brExposInfoAreaList.length; i++){
												var dongNm = data.addrMap.brExposInfoAreaList[i].dongNm;
												if(dongNm == "") 
													dongNm = '-';
											
												tempName.push(dongNm);
											}
											
											name[0] = tempName[0];
											for(var i=0; i<tempName.length; i++){
												var temp = 1;
											
												for(var j=0; j<name.length; j++){
													if(tempName[i] == name[j]){
														temp = 0;
													}
												}
												
												if(temp == 1)
													name.push(tempName[i]);
											}
											
											jdata.name = name;
											
											for(var i=0; i<name.length; i++){
												var tempHo = new Array();
												
												for(var j=0; j<data.addrMap.brExposInfoAreaList.length; j++){
													var dongNm = name[i];
													if(dongNm == '-')
														dongNm = "";
													
													if(dongNm == data.addrMap.brExposInfoAreaList[j].dongNm && data.addrMap.brExposInfoAreaList[j].exposPubuseGbCd == 1){
														tempHo.push(data.addrMap.brExposInfoAreaList[j].hoNm);
													}
												}
												
												jdata[name[i]] = tempHo;
											}
	
											$("#multi_dong").empty();
	
											if(jdata.name.length == 0){
												$("#multi_dong").append("<option value=''>선택</option>");
											} else {
												for(var i=0; i<jdata.name.length; i++){
													$("#multi_dong").append("<option value='" + jdata.name[i] + "'>" + jdata.name[i] + "</option>");
												}
											}
											
											$("#multi_ho").empty();
											var dongArr = name[0];
											
											for (const [key, value] of Object.entries(jdata)) {
												if(key == dongArr) {
													for(var i=0; i<value.length; i++){
														$("#multi_ho").append("<option value='" + value[i] + "'>" + value[i] + "</option>");
													}
												}
											}
											
											//----------------------------------------------------------------------------------------
											
											$("#multi_body").html(tbody);
											
											if(dong != ""){
												$("#multi_dong").val(dong).prop("selected", true);
											}
											
											if(ho != "") {
												$("#multi_ho").val(ho).prop("selected", true);
											}
											
											modal('modal_multi');
										} else {
											if(data.addrMap.price == "00000"){
												$("#multi_price").text("본 물건은 산정이 어렵습니다");
												$("#multi_s_price").text("-");
												$("#multi_ss_price").text("-");
											} else {
												$("#multi_price").text(priceToString(data.addrMap.price) + "원");
												$("#multi_s_price").text(priceToString(data.addrMap.multiSPrice) + "원");
												$("#multi_ss_price").text(priceToString(data.addrMap.multiSPrice * 3.3) + "원");
											}
										
											var brMainArea = 0;
											var brSubArea = 0;
											var brStrctCdNm = "";
											for(var i=0; i<data.addrMap.tempBr.length; i++){
												if(data.addrMap.tempBr[i].exposPubuseGbCd == 1){
													brMainArea = parseFloat(brMainArea) + parseFloat(data.addrMap.tempBr[i].area);
													brStrctCdNm = data.addrMap.tempBr[i].strctCdNm;
												} else {
													brSubArea = parseFloat(brSubArea) + parseFloat(data.addrMap.tempBr[i].area);
												}
											}										
											
											$("#multi_area").text(brMainArea.toFixed(2) + "㎡ / " + (parseFloat(brMainArea)/3.3).toFixed(2) + " (3.3㎡)");
											$("#multi_s_area").text(brSubArea.toFixed(2) + "㎡");
											$("#multi_s_day").text("-");
											$("#multi_ss_day").text(changeDateString(data.addrMap.brTitleInfo.useAprDay));
											
											for(var i=0; i<data.addrMap.br.length; i++){
												var tempDong = dong;
												if(tempDong == "-"){
													tempDong = "";
												}
												
												if(tempDong == data.addrMap.br[i].dongNm){
													$("#multi_flr").text(data.addrMap.brExposInfoArea.flrNoNm + " / " +data.addrMap.br[i].grndFlrCnt + "층");
													if(data.addrMap.br[i].hhldCnt == "0"){
														$("#multi_ctn").text("-");
													} else {
														$("#multi_ctn").text(data.addrMap.br[i].hhldCnt + " 세대");
													}
													$("#multi_dong_purps").text(data.addrMap.br[i].mainPurpsCdNm);
													$("#multi_ho_purps").text(data.addrMap.br[i].etcPurps);
												}
											}

											$("#multi_strct").text(brStrctCdNm);											
											
											// 바디구현
											var tbody = "";
											
											var data_len = data.addrMap.multiList.length;
											if(data_len == 0){
												tbody += "<td colspan='10'>";
												tbody += "데이터가 없습니다.";
												tbody += "</td>";
											} else {
												if(data_len >= 10){
													data_len = 10;
												}
												
												const tempSubAddr = new Array();
												tempSubAddr.push(coords);
												
												const cSubListAddr = new Array();
												const cTempPrice = new Array();
												const cTempArea = new Array();
												
												for(var i=0; i<data_len; i++) {
													tbody += "<tr>";
													tbody += "<td>"+ (Number(i)+1) +"</td>";
													tbody += "<td>-</td>";
													
													var subListAddr = "<td>"+ data.addrMap.multiList[i].platPlc + " " + data.addrMap.multiList[i].oldBunJi +"</td>";
													tbody += subListAddr; 
													tbody += "<td>"+ data.addrMap.multiList[i].bldNm +"</td>";
													tbody += "<td>"+ data.addrMap.multiList[i].floor + " 층</td>";
													tbody += "<td>"+ parseFloat(data.addrMap.multiList[i].totArea).toFixed(2) +"</td>";
													tbody += "<td>-</td>";
													tbody += "<td>"+ data.addrMap.multiList[i].useAprDay +"</td>";
													tbody += "<td>" + changeDateString(data.addrMap.multiList[i].contractYM + data.addrMap.multiList[i].contractDate) + "</td>";
													tbody += "<td>"+ priceToString(data.addrMap.multiList[i].tradePrice) +"만원</td>";
													tbody += "</tr>";
													
													var tempAddr2 = data.addrMap.multiList[i].platPlc + " " + data.addrMap.multiList[i].oldBunJi;
													var tempPrice = priceToString(data.addrMap.multiList[i].tradePrice);
													var tempArea = parseFloat(data.addrMap.multiList[i].totArea).toFixed(2);
													
													
													cSubListAddr.push(tempAddr2);
													cTempPrice.push(tempPrice);
													cTempArea.push(tempArea);
													
													geocoder.addressSearch(tempAddr2, function(result2, status) {
													
													    // 정상적으로 검색이 완료됐으면 
													     if (status === kakao.maps.services.Status.OK) {
													        var coords2 = new kakao.maps.LatLng(result2[0].y, result2[0].x);
													
															// 주소중복이면 마크 생성x
															// 순서대로 안빠짐 (추후 수정 필수)
															/*var boolX = true;
															
															for(var j=0; j<tempSubAddr.length; j++){
																if(tempSubAddr[j].La == coords2.La && tempSubAddr[j].Ma == coords2.Ma){
																	boolX = false;
																}
															}*/
															
															if(1){																
																// 결과값으로 받은 위치를 마커로 표시합니다
														        marker = new kakao.maps.Marker({
														            map: map,
														            position: coords2
														        });
														        
														        var iwContent = '<div onMouseOver="reloadDiv($(this))" style="padding:5%;">주소 : ' + cSubListAddr.shift() + '<br>가격 : ' + cTempPrice.shift() + '만원<br>전용면적 : ' + cTempArea.shift() + '</div>'; // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다
	    														
	    														var infowindow = new kakao.maps.InfoWindow({
																    position : coords2, 
																    content : iwContent 
																});
																
																infowindow.open(map, marker); 
																tempSubAddr.push(coords2);
															}
														}
													});
												}
											}
											
											//map.js에 있는 const에 객체 담기------------------------------------------------------------------
											emptyObject(jdata);
											
											var tempName = new Array();
											var name = new Array();
											
											for(var i=0; i<data.addrMap.brExposInfoAreaList.length; i++){
												var dongNm = data.addrMap.brExposInfoAreaList[i].dongNm;
												if(dongNm == "") 
													dongNm = '-';
											
												tempName.push(dongNm);
											}
											
											name[0] = tempName[0];
											for(var i=0; i<tempName.length; i++){
												var temp = 1;
											
												for(var j=0; j<name.length; j++){
													if(tempName[i] == name[j]){
														temp = 0;
													}
												}
												
												if(temp == 1)
													name.push(tempName[i]);
											}
											
											jdata.name = name;
											
											for(var i=0; i<name.length; i++){
												var tempHo = new Array();
												
												for(var j=0; j<data.addrMap.brExposInfoAreaList.length; j++){
													var dongNm = name[i];
													if(dongNm == '-')
														dongNm = "";
													
													if(dongNm == data.addrMap.brExposInfoAreaList[j].dongNm && data.addrMap.brExposInfoAreaList[j].exposPubuseGbCd == 1){
														tempHo.push(data.addrMap.brExposInfoAreaList[j].hoNm);
													}
												}
												
												jdata[name[i]] = tempHo;
											}
	
											$("#multi_dong").empty();
	
											if(jdata.name.length == 0){
												$("#multi_dong").append("<option value=''>선택</option>");
											} else {
												for(var i=0; i<jdata.name.length; i++){
													$("#multi_dong").append("<option value='" + jdata.name[i] + "'>" + jdata.name[i] + "</option>");
												}
											}
											
											$("#multi_ho").empty();
											var dongArr = name[0];
											
											for (const [key, value] of Object.entries(jdata)) {
												if(key == dongArr) {
													for(var i=0; i<value.length; i++){
														$("#multi_ho").append("<option value='" + value[i] + "'>" + value[i] + "</option>");
													}
												}
											}
											
											//----------------------------------------------------------------------------------------
											
											$("#multi_body").html(tbody);
											
											if(dong != ""){
												$("#multi_dong").val(dong).prop("selected", true);
											}
											
											if(ho != "") {
												$("#multi_ho").val(ho).prop("selected", true);
											}
											
											modal('modal_multi');
										}
									} else if(data.landKind == "0" || data.landKind == "1"){
										if(data.landKind == "0"){
											if(data.addrMap.price == "00000"){
												$("#land_price").text("본 물건은 산정이 어렵습니다");
												$("#land_l_price").text("-");
												$("#land_s_price").text("-");
												$("#land_ll_price").text("-");
												$("#land_ss_price").text("-");
											} else {
												$("#land_price").text(priceToString(data.addrMap.price) + "원");
												$("#land_l_price").text(priceToString(data.addrMap.price) + "원");
												$("#land_s_price").text("-");
													var price = "";
													price += priceToString(data.addrMap.landSPrice) + " 원<br>";
													price += "개별공시지가대비 ";
													price += (Number(data.addrMap.landSPrice) / Number(data.addrMap.apmmNvLandOpen.pnilp)) * 100;
													price += "%";
												$("#land_ll_price").text(price);
												$("#land_ss_price").text("-");
											}
											
											$("#land_l_area").text(data.addrMap.apmmNvLandOpen.parea + "㎡");
											$("#land_s_area").text("-");
											$("#land_purps").text(data.addrMap.apmmNvLandOpen.spfc1);
											$("#land_main_purps").text("-");
										} else {
											if(data.addrMap.price == "00000"){
												$("#land_price").text("본 물건은 산정이 어렵습니다");
												$("#land_l_price").text("-");
												$("#land_s_price").text("-");
												$("#land_ll_price").text("-");
												$("#land_ss_price").text("-");
											} else {
												// 건물가격, 토지가격 구하기
												var subYear = 45 - (2022 - Number(data.addrMap.brTitleInfo.pmsnoYear));
												var alonePrice = (1000000 * Number(subYear) / 45) * Number(data.addrMap.brTitleInfo.totArea);
												var landPrice = Number(data.addrMap.price) - Number(alonePrice);
												
												Math.ceil(1222 / 10) * 10
												
												$("#land_price").text(priceToString(data.addrMap.price) + "원");
												$("#land_l_price").text(priceToString(Math.ceil(landPrice / 10000) * 10000) + "원");
												$("#land_s_price").text(priceToString(Math.ceil(alonePrice / 10000) * 10000) + "원");
													var price = "";
													price += priceToString(Math.ceil(landPrice / parseFloat(data.addrMap.apmmNvLandOpen.parea) / 10000) * 10000) + " 원";
													//price += priceToString(data.addrLandMap.landSPrice) + " 원<br>";
													//price += "개별공시지가대비 ";
													//price += parseFloat((Number(data.addrLandMap.landSPrice) / Number(data.addrMap.apmmNvLandOpen.pnilp)) * 100).toFixed(2);
													//price += "%";
												$("#land_ll_price").text(price);
													price = "";
													price += priceToString(Math.ceil(alonePrice / parseFloat(data.addrMap.brTitleInfo.totArea) / 10000) * 10000) + " 원";
												$("#land_ss_price").text(price);
											}
											
											$("#land_l_area").text(data.addrMap.apmmNvLandOpen.parea + "㎡");
											$("#land_s_area").text(data.addrMap.brTitleInfo.totArea + "㎡");
											$("#land_purps").text(data.addrMap.brTitleInfo.mainPurpsCdNm);
											$("#land_main_purps").text(data.addrMap.brTitleInfo.etcPurps);
										}
										$("#land_ss_day").text("-");
										
										// 바디구현
										var tbody = "";
										
										var data_len = data.addrMap.landList.length;
										if(data_len == 0){
											tbody += "<td colspan='10'>";
											tbody += "데이터가 없습니다.";
											tbody += "</td>";
										} else {
											if(data_len >= 10){
												data_len = 10;
											}
											
											const tempSubAddr = new Array();
											tempSubAddr.push(coords);
											
											const cSubListAddr = new Array();
											const cTempPrice = new Array();
											const cTempArea = new Array();
											
											for(var i=0; i<data_len; i++) {
												tbody += "<tr>";
												tbody += "<td>"+ (Number(i)+1) +"</td>";
												tbody += "<td>유사</td>";
												
												var subListAddr = "<td>"+ data.addrMap.landList[i].platPlc + " " + data.addrMap.landList[i].bun
													+ "-" + data.addrMap.landList[i].ji +"</td>";
												tbody += subListAddr;
												
												if(data.landKind == "0"){
													tbody += "<td>-</td>";
													tbody += "<td>-</td>";
													tbody += "<td>-</td>";
													tbody += "<td>-</td>";
													tbody += "<td>-</td>";
													tbody += "<td>-</td>";
													tbody += "<td>"+ data.addrMap.landList[i].tradePrice +"만원</td>";
												} else {
													tbody += "<td>-</td>";
													tbody += "<td>-</td>";
													tbody += "<td>"+ data.addrMap.landList[i].totArea +"</td>";
													tbody += "<td>-</td>";
													tbody += "<td>"+ data.addrMap.landList[i].useAprDay +"</td>";
													tbody += "<td>"+ data.addrMap.landList[i].useAprDay +"</td>";
													tbody += "<td>"+ priceToString(data.addrMap.landList[i].tradePrice) +"만원</td>";
												}
												
												tbody += "</tr>";
												
												var tempAddr3 = data.addrMap.landList[i].platPlc + " " + data.addrMap.landList[i].bun;
												if(data.addrMap.landList[i].ji != "0000"){
													tempAddr3 += "-" + data.addrMap.landList[i].ji;
												}
												var tempPrice = priceToString(data.addrMap.landList[i].tradePrice);
												var tempArea = "";
												if(data.landKind == "0"){
													tempArea = parseFloat(data.addrMap.landList[i].agreementArea).toFixed(2);
												} else {
													tempArea = parseFloat(data.addrMap.landList[i].totArea).toFixed(2);
												}						
												
												cSubListAddr.push(subListAddr);
												cTempPrice.push(tempPrice);
												cTempArea.push(tempArea);
												
												geocoder.addressSearch(tempAddr3, function(result3, status) {
												
												    // 정상적으로 검색이 완료됐으면 
												     if (status === kakao.maps.services.Status.OK) {
												        var coords3 = new kakao.maps.LatLng(result3[0].y, result3[0].x);
												        
												
														// 주소중복이면 마크 생성x
														// 순서대로 안빠짐 (추후 수정 필수)
														/*var boolX = true;
														
														for(var j=0; j<tempSubAddr.length; j++){
															if(tempSubAddr[j].La == coords2.La && tempSubAddr[j].Ma == coords2.Ma){
																boolX = false;
															}
														}*/
														
														if(1){																	
															// 결과값으로 받은 위치를 마커로 표시합니다
													        marker = new kakao.maps.Marker({
													            map: map,
													            position: coords3
													        });
													        
													        var iwContent = '<div onMouseOver="reloadDiv($(this))" style="padding:5%;">주소 : ' + cSubListAddr.shift() + '<br>가격 : ' + cTempPrice.shift() + '만원<br>전용면적 : ' + cTempArea.shift() + '</div>'; // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다
    														
    														var infowindow = new kakao.maps.InfoWindow({
															    position : coords3, 
															    content : iwContent 
															});
															
															infowindow.open(map, marker); 
															tempSubAddr.push(coords3);
														}
													}
												});
											}
										}
										
										$("#land_body").html(tbody);
										
										modal('modal_land');
									}
								} else if(data.result == 2) {
									closeModal('loading_modal');
									
									$("#land_price").text("본 물건에 대한 정보가 없습니다.");
									$("#land_l_price").text("-");
									$("#land_s_price").text("-");
									$("#land_ll_price").text("-");
									$("#land_ss_price").text("-");
									$("#land_l_area").text("-");
									$("#land_s_area").text("-");
									$("#land_purps").text("-");
									$("#land_main_purps").text("-");
									$("#land_ll_price").text("-");
									$("#land_ss_day").text("-");
									
									var tbody = "";
									
									tbody += "<td colspan='10'>";
									tbody += "데이터가 없습니다.";
									tbody += "</td>";
									
									$("#land_body").html(tbody);
										
									modal('modal_land');
								} else {
									alert("주소반환실패");
								}
							},
							error:function(request,status,data)
							{
						         console.log("code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+data);
						    }
						});
			}, 5000);
        }   
    });
});

// 중심 좌표나 확대 수준이 변경됐을 때 지도 중심 좌표에 대한 주소 정보를 표시하도록 이벤트를 등록합니다
kakao.maps.event.addListener(map, 'idle', function() {
    searchAddrFromCoords(map.getCenter(), displayCenterInfo);
});

function searchAddrFromCoords(coords, callback) {
    // 좌표로 행정동 주소 정보를 요청합니다
    geocoder.coord2RegionCode(coords.getLng(), coords.getLat(), callback);         
}

function searchDetailAddrFromCoords(coords, callback) {
    // 좌표로 법정동 상세 주소 정보를 요청합니다
    geocoder.coord2Address(coords.getLng(), coords.getLat(), callback);
}

// 지도 좌측상단에 지도 중심좌표에 대한 주소정보를 표출하는 함수입니다
function displayCenterInfo(result, status) {
    if (status === kakao.maps.services.Status.OK) {
        var infoDiv = document.getElementById('centerAddr');

        for(var i = 0; i < result.length; i++) {
            // 행정동의 region_type 값은 'H' 이므로
            if (result[i].region_type === 'H') {
                infoDiv.innerHTML = result[i].address_name;
                break;
            }
        }
    }    
}

// 주소로 좌표를 검색합니다
function searchAddr(dong, ho){

	deleteMark();
	
	if(dong == "-" || dong == "" || dong == undefined){
		dong = "";
	}
	
	if(ho == "" || ho == undefined) {
		ho = "";
	}
	
	var addr = $("#search").val();

	geocoder.addressSearch(addr, function(result, status) {
	
	    // 정상적으로 검색이 완료됐으면 
	     if (status === kakao.maps.services.Status.OK) {
	     
	     	modal('loading_modal');
	
	        var coords = new kakao.maps.LatLng(result[0].y, result[0].x);
	
	        // 결과값으로 받은 위치를 마커로 표시합니다
	        marker = new kakao.maps.Marker({
	            map: map,
	            position: coords
	        });
	
	        // 인포윈도우로 장소에 대한 설명을 표시합니다
	        infowindow = new kakao.maps.InfoWindow({
	            content: '<div style="width:150px;text-align:center;padding:6px 0;"> 중심주소 : ' + addr + '</div>'
	        });
	        infowindow.open(map, marker);
	
	        // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다
	        map.setCenter(coords);
	        
	        // 주소정보 가져오기
	        searchDetailAddrFromCoords(coords, function(result, status) {
		        if (status === kakao.maps.services.Status.OK) {
		        
		            const addrList200 = getAddrList200(coords);
		            //const addrList500 = getAddrList500(coords);
		            
		            $("#tempAddr").val(result[0].address.address_name);
		            
		            setTimeout(function() { 
			            $.ajax({
							type: 'POST',
							url: '/map/search',
							traditional : true,
							data: {"addr": result[0].address.address_name, "addrList200" : addrList200,
							 "dong" : dong, "ho" : ho
							 },
							dataType: 'JSON',
							success: function(data)
							{
								closeModal('loading_modal');
					
								if(data.result == 1){
									if(data.landKind == "2" || data.landKind == "4" || data.landKind == "3" || data.landKind == "5"){
										if(dong == "" && ho == ""){
											$("#multi_price").text("동, 호수를 선택 후 검색해주세요");
											$("#multi_s_price").text("-");
											$("#multi_ss_price").text("-");
											$("#multi_area").text("-");
											$("#multi_s_area").text("-");
											$("#multi_s_day").text("-");
											$("#multi_ss_day").text("-");
											$("#multi_flr").text("-");
											$("#multi_ctn").text("-");
											$("#multi_dong_purps").text("-");
											$("#multi_ho_purps").text("-");
											$("#multi_strct").text("-");
											
											
											// 바디구현
											var tbody = "";
											
											
											//map.js에 있는 const에 객체 담기------------------------------------------------------------------
											emptyObject(jdata);
											
											var tempName = new Array();
											var name = new Array();
											
											for(var i=0; i<data.addrMap.brExposInfoAreaList.length; i++){
												var dongNm = data.addrMap.brExposInfoAreaList[i].dongNm;
												if(dongNm == "") 
													dongNm = '-';
											
												tempName.push(dongNm);
											}
											
											name[0] = tempName[0];
											for(var i=0; i<tempName.length; i++){
												var temp = 1;
											
												for(var j=0; j<name.length; j++){
													if(tempName[i] == name[j]){
														temp = 0;
													}
												}
												
												if(temp == 1)
													name.push(tempName[i]);
											}
											
											jdata.name = name;
											
											for(var i=0; i<name.length; i++){
												var tempHo = new Array();
												
												for(var j=0; j<data.addrMap.brExposInfoAreaList.length; j++){
													var dongNm = name[i];
													if(dongNm == '-')
														dongNm = "";
													
													if(dongNm == data.addrMap.brExposInfoAreaList[j].dongNm && data.addrMap.brExposInfoAreaList[j].exposPubuseGbCd == 1){
														tempHo.push(data.addrMap.brExposInfoAreaList[j].hoNm);
													}
												}
												
												jdata[name[i]] = tempHo;
											}
	
											$("#multi_dong").empty();
	
											if(jdata.name.length == 0){
												$("#multi_dong").append("<option value=''>선택</option>");
											} else {
												for(var i=0; i<jdata.name.length; i++){
													$("#multi_dong").append("<option value='" + jdata.name[i] + "'>" + jdata.name[i] + "</option>");
												}
											}
											
											$("#multi_ho").empty();
											var dongArr = name[0];
											
											for (const [key, value] of Object.entries(jdata)) {
												if(key == dongArr) {
													for(var i=0; i<value.length; i++){
														$("#multi_ho").append("<option value='" + value[i] + "'>" + value[i] + "</option>");
													}
												}
											}
											
											//----------------------------------------------------------------------------------------
											
											$("#multi_body").html(tbody);
											
											if(dong != ""){
												$("#multi_dong").val(dong).prop("selected", true);
											}
											
											if(ho != "") {
												$("#multi_ho").val(ho).prop("selected", true);
											}
											
											modal('modal_multi');
										} else {
											if(data.addrMap.price == "00000"){
												$("#multi_price").text("본 물건은 산정이 어렵습니다");
												$("#multi_s_price").text("-");
												$("#multi_ss_price").text("-");
											} else {
												$("#multi_price").text(priceToString(data.addrMap.price) + "원");
												$("#multi_s_price").text(priceToString(data.addrMap.multiSPrice) + "원");
												$("#multi_ss_price").text(priceToString(data.addrMap.multiSPrice * 3.3) + "원");
											}
										
											var brMainArea = 0;
											var brSubArea = 0;
											var brStrctCdNm = "";
											for(var i=0; i<data.addrMap.tempBr.length; i++){
												if(data.addrMap.tempBr[i].exposPubuseGbCd == 1){
													brMainArea = parseFloat(brMainArea) + parseFloat(data.addrMap.tempBr[i].area);
													brStrctCdNm = data.addrMap.tempBr[i].strctCdNm;
												} else {
													brSubArea = parseFloat(brSubArea) + parseFloat(data.addrMap.tempBr[i].area);
												}
											}										
											
											$("#multi_area").text(brMainArea.toFixed(2) + "㎡ / " + (parseFloat(brMainArea)/3.3).toFixed(2) + " (3.3㎡)");
											$("#multi_s_area").text(brSubArea.toFixed(2) + "㎡");
											$("#multi_s_day").text("-");
											$("#multi_ss_day").text(changeDateString(data.addrMap.brTitleInfo.useAprDay));
											
											for(var i=0; i<data.addrMap.br.length; i++){
												var tempDong = dong;
												if(tempDong == "-"){
													tempDong = "";
												}
												
												if(tempDong == data.addrMap.br[i].dongNm){
													$("#multi_flr").text(data.addrMap.brExposInfoArea.flrNoNm + " / " +data.addrMap.br[i].grndFlrCnt + "층");
													if(data.addrMap.br[i].hhldCnt == "0"){
														$("#multi_ctn").text("-");
													} else {
														$("#multi_ctn").text(data.addrMap.br[i].hhldCnt + " 세대");
													}
													$("#multi_dong_purps").text(data.addrMap.br[i].mainPurpsCdNm);
													$("#multi_ho_purps").text(data.addrMap.br[i].etcPurps);
												}
											}

											$("#multi_strct").text(brStrctCdNm);											
											
											// 바디구현
											var tbody = "";
											
											var data_len = data.addrMap.multiList.length;
											if(data_len == 0){
												tbody += "<td colspan='10'>";
												tbody += "데이터가 없습니다.";
												tbody += "</td>";
											} else {
												if(data_len >= 10){
													data_len = 10;
												}
												
												const tempSubAddr = new Array();
												tempSubAddr.push(coords);
												
												const cSubListAddr = new Array();
												const cTempPrice = new Array();
												const cTempArea = new Array();
												
												for(var i=0; i<data_len; i++) {
													tbody += "<tr>";
													tbody += "<td>"+ (Number(i)+1) +"</td>";
													tbody += "<td>-</td>";
													
													var subListAddr = "<td>"+ data.addrMap.multiList[i].platPlc + " " + data.addrMap.multiList[i].oldBunJi +"</td>";
													tbody += subListAddr; 
													tbody += "<td>"+ data.addrMap.multiList[i].bldNm +"</td>";
													tbody += "<td>"+ data.addrMap.multiList[i].floor + " 층</td>";
													tbody += "<td>"+ parseFloat(data.addrMap.multiList[i].totArea).toFixed(2) +"</td>";
													tbody += "<td>-</td>";
													tbody += "<td>"+ data.addrMap.multiList[i].useAprDay +"</td>";
													tbody += "<td>" + changeDateString(data.addrMap.multiList[i].contractYM + data.addrMap.multiList[i].contractDate) + "</td>";
													tbody += "<td>"+ priceToString(data.addrMap.multiList[i].tradePrice) +"만원</td>";
													tbody += "</tr>";
													
													var tempAddr2 = data.addrMap.multiList[i].platPlc + " " + data.addrMap.multiList[i].oldBunJi;
													var tempPrice = priceToString(data.addrMap.multiList[i].tradePrice);
													var tempArea = parseFloat(data.addrMap.multiList[i].totArea).toFixed(2);
													
													
													cSubListAddr.push(tempAddr2);
													cTempPrice.push(tempPrice);
													cTempArea.push(tempArea);
													
													geocoder.addressSearch(tempAddr2, function(result2, status) {
													
													    // 정상적으로 검색이 완료됐으면 
													     if (status === kakao.maps.services.Status.OK) {
													        var coords2 = new kakao.maps.LatLng(result2[0].y, result2[0].x);
													
															// 주소중복이면 마크 생성x
															// 순서대로 안빠짐 (추후 수정 필수)
															/*var boolX = true;
															
															for(var j=0; j<tempSubAddr.length; j++){
																if(tempSubAddr[j].La == coords2.La && tempSubAddr[j].Ma == coords2.Ma){
																	boolX = false;
																}
															}*/
															
															if(1){																
																// 결과값으로 받은 위치를 마커로 표시합니다
														        marker = new kakao.maps.Marker({
														            map: map,
														            position: coords2
														        });
														        
														        var iwContent = '<div onMouseOver="reloadDiv($(this))" style="padding:5%;">주소 : ' + cSubListAddr.shift() + '<br>가격 : ' + cTempPrice.shift() + '만원<br>전용면적 : ' + cTempArea.shift() + '</div>'; // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다
	    														
	    														var infowindow = new kakao.maps.InfoWindow({
																    position : coords2, 
																    content : iwContent 
																});
																
																infowindow.open(map, marker); 
																tempSubAddr.push(coords2);
															}
														}
													});
												}
											}
											
											//map.js에 있는 const에 객체 담기------------------------------------------------------------------
											emptyObject(jdata);
											
											var tempName = new Array();
											var name = new Array();
											
											for(var i=0; i<data.addrMap.brExposInfoAreaList.length; i++){
												var dongNm = data.addrMap.brExposInfoAreaList[i].dongNm;
												if(dongNm == "") 
													dongNm = '-';
											
												tempName.push(dongNm);
											}
											
											name[0] = tempName[0];
											for(var i=0; i<tempName.length; i++){
												var temp = 1;
											
												for(var j=0; j<name.length; j++){
													if(tempName[i] == name[j]){
														temp = 0;
													}
												}
												
												if(temp == 1)
													name.push(tempName[i]);
											}
											
											jdata.name = name;
											
											for(var i=0; i<name.length; i++){
												var tempHo = new Array();
												
												for(var j=0; j<data.addrMap.brExposInfoAreaList.length; j++){
													var dongNm = name[i];
													if(dongNm == '-')
														dongNm = "";
													
													if(dongNm == data.addrMap.brExposInfoAreaList[j].dongNm && data.addrMap.brExposInfoAreaList[j].exposPubuseGbCd == 1){
														tempHo.push(data.addrMap.brExposInfoAreaList[j].hoNm);
													}
												}
												
												jdata[name[i]] = tempHo;
											}
	
											$("#multi_dong").empty();
	
											if(jdata.name.length == 0){
												$("#multi_dong").append("<option value=''>선택</option>");
											} else {
												for(var i=0; i<jdata.name.length; i++){
													$("#multi_dong").append("<option value='" + jdata.name[i] + "'>" + jdata.name[i] + "</option>");
												}
											}
											
											$("#multi_ho").empty();
											var dongArr = name[0];
											
											for (const [key, value] of Object.entries(jdata)) {
												if(key == dongArr) {
													for(var i=0; i<value.length; i++){
														$("#multi_ho").append("<option value='" + value[i] + "'>" + value[i] + "</option>");
													}
												}
											}
											
											//----------------------------------------------------------------------------------------
											
											$("#multi_body").html(tbody);
											
											if(dong != ""){
												$("#multi_dong").val(dong).prop("selected", true);
											}
											
											if(ho != "") {
												$("#multi_ho").val(ho).prop("selected", true);
											}
											
											modal('modal_multi');
										}
									} else if(data.landKind == "0" || data.landKind == "1"){
										if(data.landKind == "0"){
											if(data.addrMap.price == "00000"){
												$("#land_price").text("본 물건은 산정이 어렵습니다");
												$("#land_l_price").text("-");
												$("#land_s_price").text("-");
												$("#land_ll_price").text("-");
												$("#land_ss_price").text("-");
											} else {
												$("#land_price").text(priceToString(data.addrMap.price) + "원");
												$("#land_l_price").text(priceToString(data.addrMap.price) + "원");
												$("#land_s_price").text("-");
													var price = "";
													price += priceToString(data.addrMap.landSPrice) + " 원<br>";
													price += "개별공시지가대비 ";
													price += (Number(data.addrMap.landSPrice) / Number(data.addrMap.apmmNvLandOpen.pnilp)) * 100;
													price += "%";
												$("#land_ll_price").text(price);
												$("#land_ss_price").text("-");
											}
											
											$("#land_l_area").text(data.addrMap.apmmNvLandOpen.parea + "㎡");
											$("#land_s_area").text("-");
											$("#land_purps").text(data.addrMap.apmmNvLandOpen.spfc1);
											$("#land_main_purps").text("-");
										} else {
											if(data.addrMap.price == "00000"){
												$("#land_price").text("본 물건은 산정이 어렵습니다");
												$("#land_l_price").text("-");
												$("#land_s_price").text("-");
												$("#land_ll_price").text("-");
												$("#land_ss_price").text("-");
											} else {
												// 건물가격, 토지가격 구하기
												var subYear = 45 - (2022 - Number(data.addrMap.brTitleInfo.pmsnoYear));
												var alonePrice = (1000000 * Number(subYear) / 45) * Number(data.addrMap.brTitleInfo.totArea);
												var landPrice = Number(data.addrMap.price) - Number(alonePrice);
												
												Math.ceil(1222 / 10) * 10
												
												$("#land_price").text(priceToString(data.addrMap.price) + "원");
												$("#land_l_price").text(priceToString(Math.ceil(landPrice / 10000) * 10000) + "원");
												$("#land_s_price").text(priceToString(Math.ceil(alonePrice / 10000) * 10000) + "원");
													var price = "";
													price += priceToString(Math.ceil(landPrice / parseFloat(data.addrMap.apmmNvLandOpen.parea) / 10000) * 10000) + " 원";
													//price += priceToString(data.addrLandMap.landSPrice) + " 원<br>";
													//price += "개별공시지가대비 ";
													//price += parseFloat((Number(data.addrLandMap.landSPrice) / Number(data.addrMap.apmmNvLandOpen.pnilp)) * 100).toFixed(2);
													//price += "%";
												$("#land_ll_price").text(price);
													price = "";
													price += priceToString(Math.ceil(alonePrice / parseFloat(data.addrMap.brTitleInfo.totArea) / 10000) * 10000) + " 원";
												$("#land_ss_price").text(price);
											}
											
											$("#land_l_area").text(data.addrMap.apmmNvLandOpen.parea + "㎡");
											$("#land_s_area").text(data.addrMap.brTitleInfo.totArea + "㎡");
											$("#land_purps").text(data.addrMap.brTitleInfo.mainPurpsCdNm);
											$("#land_main_purps").text(data.addrMap.brTitleInfo.etcPurps);
										}
										$("#land_ss_day").text("-");
										
										// 바디구현
										var tbody = "";
										
										var data_len = data.addrMap.landList.length;
										if(data_len == 0){
											tbody += "<td colspan='10'>";
											tbody += "데이터가 없습니다.";
											tbody += "</td>";
										} else {
											if(data_len >= 10){
												data_len = 10;
											}
											
											const tempSubAddr = new Array();
											tempSubAddr.push(coords);
											
											const cSubListAddr = new Array();
											const cTempPrice = new Array();
											const cTempArea = new Array();
											
											for(var i=0; i<data_len; i++) {
												tbody += "<tr>";
												tbody += "<td>"+ (Number(i)+1) +"</td>";
												tbody += "<td>유사</td>";
												
												var subListAddr = "<td>"+ data.addrMap.landList[i].platPlc + " " + data.addrMap.landList[i].bun
													+ "-" + data.addrMap.landList[i].ji +"</td>";
												tbody += subListAddr;
												
												if(data.landKind == "0"){
													tbody += "<td>-</td>";
													tbody += "<td>-</td>";
													tbody += "<td>-</td>";
													tbody += "<td>-</td>";
													tbody += "<td>-</td>";
													tbody += "<td>-</td>";
													tbody += "<td>"+ data.addrMap.landList[i].tradePrice +"만원</td>";
												} else {
													tbody += "<td>-</td>";
													tbody += "<td>-</td>";
													tbody += "<td>"+ data.addrMap.landList[i].totArea +"</td>";
													tbody += "<td>-</td>";
													tbody += "<td>"+ data.addrMap.landList[i].useAprDay +"</td>";
													tbody += "<td>"+ data.addrMap.landList[i].useAprDay +"</td>";
													tbody += "<td>"+ priceToString(data.addrMap.landList[i].tradePrice) +"만원</td>";
												}
												
												tbody += "</tr>";
												
												var tempAddr3 = data.addrMap.landList[i].platPlc + " " + data.addrMap.landList[i].bun;
												if(data.addrMap.landList[i].ji != "0000"){
													tempAddr3 += "-" + data.addrMap.landList[i].ji;
												}
												var tempPrice = priceToString(data.addrMap.landList[i].tradePrice);
												var tempArea = "";
												if(data.landKind == "0"){
													tempArea = parseFloat(data.addrMap.landList[i].agreementArea).toFixed(2);
												} else {
													tempArea = parseFloat(data.addrMap.landList[i].totArea).toFixed(2);
												}						
												
												cSubListAddr.push(subListAddr);
												cTempPrice.push(tempPrice);
												cTempArea.push(tempArea);
												
												geocoder.addressSearch(tempAddr3, function(result3, status) {
												
												    // 정상적으로 검색이 완료됐으면 
												     if (status === kakao.maps.services.Status.OK) {
												        var coords3 = new kakao.maps.LatLng(result3[0].y, result3[0].x);
												        
												
														// 주소중복이면 마크 생성x
														// 순서대로 안빠짐 (추후 수정 필수)
														/*var boolX = true;
														
														for(var j=0; j<tempSubAddr.length; j++){
															if(tempSubAddr[j].La == coords2.La && tempSubAddr[j].Ma == coords2.Ma){
																boolX = false;
															}
														}*/
														
														if(1){																	
															// 결과값으로 받은 위치를 마커로 표시합니다
													        marker = new kakao.maps.Marker({
													            map: map,
													            position: coords3
													        });
													        
													        var iwContent = '<div onMouseOver="reloadDiv($(this))" style="padding:5%;">주소 : ' + cSubListAddr.shift() + '<br>가격 : ' + cTempPrice.shift() + '만원<br>전용면적 : ' + cTempArea.shift() + '</div>'; // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다
    														
    														var infowindow = new kakao.maps.InfoWindow({
															    position : coords3, 
															    content : iwContent 
															});
															
															infowindow.open(map, marker); 
															tempSubAddr.push(coords3);
														}
													}
												});
											}
										}
										
										$("#land_body").html(tbody);
										
										modal('modal_land');
									}
								} else if(data.result == 2) {
									closeModal('loading_modal');
									
									$("#land_price").text("본 물건에 대한 정보가 없습니다.");
									$("#land_l_price").text("-");
									$("#land_s_price").text("-");
									$("#land_ll_price").text("-");
									$("#land_ss_price").text("-");
									$("#land_l_area").text("-");
									$("#land_s_area").text("-");
									$("#land_purps").text("-");
									$("#land_main_purps").text("-");
									$("#land_ll_price").text("-");
									$("#land_ss_day").text("-");
									
									var tbody = "";
									
									tbody += "<td colspan='10'>";
									tbody += "데이터가 없습니다.";
									tbody += "</td>";
									
									$("#land_body").html(tbody);
										
									modal('modal_land');
								} else {
									alert("주소반환실패");
								}
							},
							error:function(request,status,data)
							{
						         console.log("code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+data);
						    }
						});
					}, 5000);
					
		        }   
		    });
	        
	    }  else {
	    	alert("주소를 정확하게 입력해주세요. (시, 군, 구, 동 텍스트 포함)");
	    }
	});   

}

// 마커제거
function deleteMark() {
	marker.setMap(null);
	infowindow.setMap(null);
}


function modal(id) {
    var zIndex = 9999;
    var modal = document.getElementById(id);

    // 모달 div 뒤에 희끄무레한 레이어
    var bg = document.createElement('div');
    bg.setStyle({
        position: 'fixed',
        zIndex: zIndex,
        left: '0px',
        top: '0px',
        width: '100%',
        height: '100%',
        overflow: 'auto',
        // 레이어 색갈은 여기서 바꾸면 됨
        backgroundColor: 'rgba(0,0,0,0.4)'
    });
    bg.id = 'modalId';
    document.body.append(bg);

    // 닫기 버튼 처리, 시꺼먼 레이어와 모달 div 지우기
    modal.querySelector('.modal_close_btn').addEventListener('click', function() {
        bg.remove();
        modal.style.display = 'none';
    });
    

    modal.setStyle({
        position: 'fixed',
        display: 'block',
        boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',

        // 시꺼먼 레이어 보다 한칸 위에 보이기
        zIndex: zIndex + 1,

        // div center 정렬
        top: '50%',
        left: '50%',
        transform: 'translate(-50%, -50%)',
        msTransform: 'translate(-50%, -50%)',
        webkitTransform: 'translate(-50%, -50%)'
    });
}

// Element 에 style 한번에 오브젝트로 설정하는 함수 추가
Element.prototype.setStyle = function(styles) {
    for (var k in styles) this.style[k] = styles[k];
    return this;
};

/*
document.getElementById('popup_open_btn').addEventListener('click', function() {
    // 모달창 띄우기
    modal('loading_modal');
});
*/

function closeModal(id){
	var modal = document.getElementById(id);

	$("#modalId").remove();
	modal.style.display = 'none';
}

//오브젝트 비우기
function emptyObject(obj) {
	Object.keys(obj).forEach(key => delete obj[key])
}

//1000단위표시
function priceToString(price) {
    return price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
}

//연월일표시
function changeDateString(date){
    var year = date.substr(0,4);
    var month = date.substr(4,2);
    var day = date.substr(6,2);
    return year + "-" + month + "-" + day;
}

//표시된 돔 노드 정렬
function reloadDiv(thiz){
	thiz.parent().parent().parent().append(thiz.parent().parent());
	thiz.parent().parent().appendTo(thiz.parent().parent().parent());
}

</script>
